[tox]
minversion = 3.18.0
envlist =
    lint
    docs
    py{36,37,38,39}-{stable,devel}
    packaging

# do not enable skip missing to avoid CI false positives
skip_missing_interpreters = false
isolated_build = true

[testenv]
usedevelop = true
# upgrade pip/wheel/setuptools to the latest version in virtualenv
download = true
passenv =
    CI
    CONTAINER_*
    DOCKER_*
    GITHUB_*
    PODMAN_*
    PYTEST_*
    SSH_AUTH_SOCK
    TERM
    TOX*
    TWINE_*
setenv =
    ANSIBLE_FORCE_COLOR={env:ANSIBLE_FORCE_COLOR:true}
    ANSIBLE_CONFIG={toxinidir}/dev/null
    ANSIBLE_NOCOWS=true
    ANSIBLE_RETRY_FILES_ENABLED=false
    ANSIBLE_STDOUT_CALLBACK={env:ANSIBLE_STDOUT_CALLBACK:debug}
    ANSIBLE_VERBOSITY={env:ANSIBLE_VERBOSITY:0}
    PYTHONPATH={envsitepackagesdir}
    PY_COLORS={env:PY_COLORS:1}
allowlist_externals =
    rm
deps =
    py{36,37,38,39}-{!devel}: molecule[ansible,test]>=3.2.0
    py{36,37,38,39}-{devel}: git+https://github.com/ansible-community/molecule.git@master#egg=molecule[ansible,test]
    selinux
commands =
    devel: ansible-galaxy install git+https://github.com/ansible-collections/community.general.git
    # failsafe as pip may install incompatible dependencies
    pip check
    # failsafe for preventing changes that may break pytest collection
    python -m pytest -p no:cov --collect-only
    python -m pytest {posargs:-l}

[testenv:lint]
description = Runs all linting tasks
deps = pre-commit>=1.18.1
skip_install = true
commands =
    # to run a single linter you can do "pre-commit run flake8"
    python -m pre_commit run {posargs:--all}

[testenv:docs]
description = Invoke sphinx-build to build the HTML docs
# doc requires py3 due to use of f'' strings and using only python3 as
# basepython risks using python3.4 which is not supported.
basepython = python3
passenv = *
usedevelop = False
commands =
    python -m sphinx \
      -a -n -W \
      -b html --color \
      -d "{toxinidir}/docs/docstree" \
      docs/ "{toxinidir}/docs/docstree/html"

    # Print out the output docs dir and a way to serve html:
    python -c \
    'import pathlib; '\
    'docs_dir = pathlib.Path(r"{toxinidir}") / "docs/docstree/html"; index_file = docs_dir / "index.html"; print(f"\nDocumentation available under `file://\{index_file\}`\n\nTo serve docs, use `python3 -m http.server --directory \{docs_dir\} 0`\n")'
extras =
    docs

[testenv:docs-livereload]
description = Invoke sphinx-autobuild to build and reload the HTML docs
basepython = {[testenv:docs]basepython}
passenv = {[testenv:docs]passenv}
usedevelop = {[testenv:docs]usedevelop}
commands =
    python -m sphinx_autobuild docs/ "{toxworkdir}/docs/html"
deps =
    sphinx-autobuild>=0.7.1,<1.0
extras =
    docs

[testenv:packaging]
description =
    Do packaging/distribution. If tag is not present or PEP440 compliant upload to
    PYPI could fail
skip_install = true
deps =
    collective.checkdocs >= 0.2
    pep517 >= 0.8.2
    pip >= 20.2.2
    toml >= 0.10.1
    twine >= 3.2.0  # pyup: ignore
setenv =
commands =
    rm -rfv {toxinidir}/dist/
    python -m pep517.build \
      --source \
      --binary \
      --out-dir {toxinidir}/dist/ \
      {toxinidir}
    # metadata validation
    python -m twine check '{toxinidir}/dist/*'

[testenv:publish]
description = Upload to PYPI
deps = {[testenv:packaging]deps}
skip_install = true
commands =
    {[testenv:packaging]commands}
    python -m twine upload --disable-progress-bar '{toxinidir}/dist/*'
