name: tox

on:
  create:  # is used for publishing to TestPyPI
    tags:  # any tag regardless of its name, no branches
      - "**"
  push:  # only publishes pushes to the main branch to TestPyPI
    branches:  # any integration branch but not tag
      - "main"
  pull_request:
  release:
    types:
      - published  # It seems that you can publish directly without creating
  schedule:
    - cron: 1 0 * * *  # Run daily at 0:01 UTC

jobs:
  build:
    name: ${{ matrix.name }}
    # ubuntu-latest is current older and we need last podman toolkit.
    # https://docs.github.com/en/actions/reference/virtual-environments-for-github-hosted-runners
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: lint
            tox_env: lint
          - name: dockerfile
            tox_env: dockerfile
          # - tox_env: docs
          - name: py36
            tox_env: py36-2.9,py36-2.10,py36-2.11
            PREFIX: PYTEST_REQPASS=3
          - name: py37
            tox_env: py37-2.9,py37-2.10,py37-2.11
            PREFIX: PYTEST_REQPASS=3
          - name: py38
            tox_env: py38-2.9,py38-2.10,py38-2.11
            PREFIX: PYTEST_REQPASS=3
          - name: py39
            tox_env: py39-2.9,py39-2.10,py39-2.11
            PREFIX: PYTEST_REQPASS=3
          - name: packaging
            tox_env: packaging

    steps:
      - uses: actions/checkout@v1
      - name: Install system dependencies
        # community.docker requires docker>=5.0.0 but ubuntu has older
        run: |
          sudo apt-get update \
          && sudo apt-get install -y ansible python3-docker python3-requests \
          && sudo pip3 install -U docker \
          && ansible-doc -l | grep docker_container
      - name: Find python version
        id: py_ver
        shell: python
        if: ${{ contains(matrix.tox_env, 'py') }}
        run: |
          v = '${{ matrix.tox_env }}'.split('-')[0].lstrip('py')
          print('::set-output name=version::{0}.{1}'.format(v[0],v[1:]))
      # Even our lint and other envs need access to tox
      - name: Install a default Python
        uses: actions/setup-python@v2
        if: ${{ ! contains(matrix.tox_env, 'py') }}
      # Be sure to install the version of python needed by a specific test, if necessary
      - name: Set up Python version
        uses: actions/setup-python@v2
        if: ${{ contains(matrix.tox_env, 'py') }}
        with:
          python-version: ${{ steps.py_ver.outputs.version }}
      - name: Install dependencies
        run: |
          docker version
          docker info
          python -m pip install -U "pip>=21.2.4" "tox>=3.24.2"
      - name: Run tox -e ${{ matrix.tox_env }}
        run: |
          echo "${{ matrix.PREFIX }} tox -e ${{ matrix.tox_env }}"
          ${{ matrix.PREFIX }} tox -e ${{ matrix.tox_env }}
